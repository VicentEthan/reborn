<?php

// autoload_real.php generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit349b6d97a645f3e2bb853fa8aec17d4d
=======
class ComposerAutoloaderInit4783d71dd03f288fbfb985062022156a
>>>>>>> 341edc01439c6949f17cb58aeb9b2776a12fd869
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== static::$loader) {
            return static::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit349b6d97a645f3e2bb853fa8aec17d4d', 'loadClassLoader'));
        static::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit349b6d97a645f3e2bb853fa8aec17d4d', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInit4783d71dd03f288fbfb985062022156a', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit4783d71dd03f288fbfb985062022156a', 'loadClassLoader'));
>>>>>>> 341edc01439c6949f17cb58aeb9b2776a12fd869

        $vendorDir = dirname(__DIR__);
        $baseDir = dirname(dirname($vendorDir));

        $map = require __DIR__ . '/autoload_namespaces.php';
        foreach ($map as $namespace => $path) {
            $loader->set($namespace, $path);
        }

        $classMap = require __DIR__ . '/autoload_classmap.php';
        if ($classMap) {
            $loader->addClassMap($classMap);
        }

        $loader->register(true);

        require $vendorDir . '/swiftmailer/swiftmailer/lib/swift_required.php';
        require $vendorDir . '/illuminate/support/Illuminate/Support/helpers.php';
        require $baseDir . '/heart/reborn/src/helpers.php';

        return $loader;
    }
}
